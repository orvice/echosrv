// Code generated by ent, DO NOT EDIT.

package accesslog

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the accesslog type in the database.
	Label = "access_log"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedUnix holds the string denoting the created_unix field in the database.
	FieldCreatedUnix = "created_unix"
	// FieldPath holds the string denoting the path field in the database.
	FieldPath = "path"
	// FieldMethod holds the string denoting the method field in the database.
	FieldMethod = "method"
	// FieldIP holds the string denoting the ip field in the database.
	FieldIP = "ip"
	// FieldUa holds the string denoting the ua field in the database.
	FieldUa = "ua"
	// FieldTrace holds the string denoting the trace field in the database.
	FieldTrace = "trace"
	// Table holds the table name of the accesslog in the database.
	Table = "access_logs"
)

// Columns holds all SQL columns for accesslog fields.
var Columns = []string{
	FieldID,
	FieldCreatedUnix,
	FieldPath,
	FieldMethod,
	FieldIP,
	FieldUa,
	FieldTrace,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the AccessLog queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCreatedUnix orders the results by the created_unix field.
func ByCreatedUnix(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedUnix, opts...).ToFunc()
}

// ByPath orders the results by the path field.
func ByPath(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPath, opts...).ToFunc()
}

// ByMethod orders the results by the method field.
func ByMethod(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMethod, opts...).ToFunc()
}

// ByIP orders the results by the ip field.
func ByIP(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIP, opts...).ToFunc()
}

// ByUa orders the results by the ua field.
func ByUa(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUa, opts...).ToFunc()
}

// ByTrace orders the results by the trace field.
func ByTrace(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTrace, opts...).ToFunc()
}
